---
title: "Visualise Geospatial Points"
subtitle: "Hands-on Exercise 7.2 - Visualising and Analysing Geographic Data"
editor: visual
date:  23 Feb 2023
date-modified: "`r Sys.Date()`"
code-copy: true
execute: 
  echo: true
  eval: true
  warning: false
  error: false
website: 
    google-analytics: "G-PKMQ2W4ZRC"
format:
  html:
    code-overflow: wrap
    code-fold: true
    code-summary: "Show the code"
    css: styles.css
---

# **1. OVERVIEW**

This study explores steps to ...

# **2. R PACKAGE REQUIRED**

## **2.1 Load R Packages**

```{r}
#| code-fold: false
pacman::p_load(sf, tmap, tidyverse)
```

# **3. DATA PREPARATION**

## **3.1 Acquire Data Source**

Two data set will be used to create the choropleth map. They are:

-   Master Plan 2014 Subzone Boundary (Web) (i.e. `MP14_SUBZONE_WEB_PL`) in ESRI shapefile format. It can be downloaded at [data.gov.sg](https://data.gov.sg/) This is a geospatial data. It consists of the geographical boundary of Singapore at the planning subzone level. The data is based on URA Master Plan 2014.

-   Singapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling, June 2011-2020 in csv format (i.e. `respopagesextod2011to2020.csv`). This is an aspatial data fie. It can be downloaded at [Department of Statistics, Singapore](https://www.singstat.gov.sg/) Although it does not contain any coordinates values, but it's PA and SZ fields can be used as unique identifiers to geocode to `MP14_SUBZONE_WEB_PL` shapefile.

## **3.2 Import Data**

### **3.2.1 Import Geospatial Data**

Involved two (2) steps : import and inspect imported data set.

The code chunk below uses the *st_read()* function of **sf** package to import `MP14_SUBZONE_WEB_PL` shapefile into R as a simple feature data frame called `mpsz`.

::: {.callout-tip collapse="true" appearance="simple" icon="false"}
## [**⇳ Usage of the code chunk below :**]{style="color:#3a9c88"}

[***read_excel( )*** - readr -]{style="color:#d46e15"} to read Excel file into a tibble.

[***problems( )*** - readr -]{style="color:#d46e15"} to reveal any parsing errors when importing the CSV file.
:::

```{r}
#| eval: false
sgpools <- read_csv("data/aspatial/SGPools_svy21.csv")
```

### **3.2.2 Examine data**

You can examine the content of `mpsz` by using the code chunk below.
